version: '3.4'

networks:
    connection:
        driver: bridge

services:

  #--------------------------------------------------------

  gateway:

    container_name: GatewayAPI

    image: ${DOCKER_REGISTRY-}gateway

    build:
      context: .
      dockerfile: src/Service/Gateway/Dockerfile

    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=5000

    ports:
        - "5000:5000"
        
    networks:
        - connection

  #--------------------------------------------------------

  rabbitmq:

    container_name: RabbitMQ

    image: rabbitmq:4-management

    environment:
        - RABBITMQ_DEFAULT_PASS=Frostwert234Z
        - RABBITMQ_DEFAULT_USER=Admin

    ports:
        - "8080:15672"
        
    networks:
        - connection

  #--------------------------------------------------------

  account:

    container_name: Account

    image: ${DOCKER_REGISTRY-}account

    build:
      context: .
      dockerfile: src/Service/Microservices/Account/AccountAPI/Dockerfile

    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=5001

    ports:
        - "5001:5001"
  
    networks:
        - connection
    
    depends_on:
        - accountDatabase
        
  #--------------------------------------------------------

  accountDatabase:

    container_name: AccountDatabase

    image: postgres:latest

    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: Frostwert234Z
        POSTGRES_DB: AccountDatabase
        PGPORT: 5011
  
    ports:
        - "5011:5011"

    networks:
        - connection
    
    volumes:
        - account_data:/var/lib/postgresql/data
        
  #--------------------------------------------------------

  hospital:

    container_name: Hospital

    image: ${DOCKER_REGISTRY-}hospital

    build:
      context: .
      dockerfile: src/Service/Microservices/Hospital/HospitalAPI/Dockerfile

    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=5002

    ports:
        - "5002:5002"
  
    networks:
        - connection
    
    depends_on:
        - hospitalDatabase
        
  #--------------------------------------------------------

  hospitalDatabase:

    container_name: HospitalDatabase

    image: postgres:latest

    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: Frostwert234Z
        POSTGRES_DB: HospitalDatabase
        PGPORT: 5022
  
    ports:
        - "5022:5022"

    networks:
        - connection
    
    volumes:
        - hospital_data:/var/lib/postgresql/data
        
  #--------------------------------------------------------
  
  timetable:

    container_name: Timetable

    image: ${DOCKER_REGISTRY-}timetable

    build:
      context: .
      dockerfile: src/Service/Microservices/Timetable/TimetableAPI/Dockerfile

    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_HTTP_PORTS=5003

    ports:
        - "5003:5003"
  
    networks:
        - connection
    
    depends_on:
        - timetableDatabase
        
  #--------------------------------------------------------

  timetableDatabase:

    container_name: TimetableDatabase

    image: postgres:latest

    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: Frostwert234Z
        POSTGRES_DB: TimetableDatabase
        PGPORT: 5033
  
    ports:
        - "5033:5033"

    networks:
        - connection
    
    volumes:
        - timetable_data:/var/lib/postgresql/data
        
  #--------------------------------------------------------

volumes:
    account_data:
    hospital_data:
    timetable_data: